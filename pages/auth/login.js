import React, { useState } from "react";
import axios from "axios";
import router from "next/router";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

// Layout files
import Auth from "../../layouts/Auth";

// utils for login
import { login } from "../../utils/auth";
import { parseJWT } from "../../utils/parseJWT";

// parsing jwt for get the payload object

export default function Login() {
  const [email, setEmail] = useState([]);
  const [password, setPassword] = useState([]);
  const [isLoading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const url = `${process.env.NEXT_PUBLIC_API_URL}/auth/login`;
      const response = await axios.post(url, { email, password });
      const { token } = response.data;
      await login({ token });
      const { role } = parseJWT(token);
      switch (role) {
        case 1:
          router.push("/admin");
          break;
        case 2:
          router.push("/driver");
          break;
        case 3:
          router.push("/member");
          break;
        default:
          break;
      }
    } catch (error) {
      setLoading(false);
      alert(
        "Error when redirecting into dashboard, check your username or passowrd",
        error
      );
    }
  };

  return (
    <>
      <Head>
        <title>Login|Simtya</title>
        <meta name="description" content="Generated by Login|Simtya" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={handleSubmit}>
        <Image
          className="mx-auto"
          src="/vercel.svg"
          alt=""
          width="72"
          height="72"></Image>
        <h1 className="h3 mb-3 fw-normal">Please sign in</h1>

        <div className="form-floating">
          <input
            name="email"
            onChange={(e) => {
              setEmail(e.target.value);
            }}
            required
            type="email"
            className="form-control"
            id="floatingEmail"
            placeholder="name@example.com"
          />
          <label htmlFor="floatingInput">Email Address</label>
        </div>
        <div className="form-floating">
          <input
            name="password"
            onChange={(e) => {
              setPassword(e.target.value);
            }}
            required
            autoComplete="on"
            type="password"
            className="form-control"
            id="floatingPassword"
            placeholder="Password"
          />
          <label htmlFor="floatingPassword">Password</label>
        </div>

        <button className="w-100 btn btn-lg btn-primary" type="submit">
          {isLoading ? (
            <div className="spinner-border text-light" role="status">
              <span className="visually-hidden">Loading...</span>
            </div>
          ) : (
            "Login"
          )}
        </button>
      </form>
      <Link href="/auth/register">
        <a className="d-block mt-2 fs-6">
          <small>Are you member ? Create account here</small>
        </a>
      </Link>
    </>
  );
}

Login.layout = Auth;
